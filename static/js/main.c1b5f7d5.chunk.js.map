{"version":3,"sources":["lib/tictactoe/tictactoe.js","components/LevelSelection.js","components/Square.js","components/Input.js","components/ScoreboardCell.js","components/Scoreboard.js","components/Game.js","App.js","index.js"],"names":["Game","handicap","playerBegins","this","turn","state","i","j","Error","console","log","gameFinished","_randInt","_randomMove","action","_win","_avoidDefeat","_matchball","_center","_oppositeCorner","_emptyCorner","length","shift","_fillTriplet","check_value","message","check","_checkTriplet","c","_where","map","s","flat","x","acc","y","rows","v","reduce","_shuffle","r","empty","cols","e","Math","floor","max","random","array","value","forEach","push","a","diag","sdiag","concat","_winner","_winningLine","winningLine","LevelSelection","props","selected","currentLevel","updateSelectionState","bind","newLevel","parseInt","target","setState","callback","buttons","levels","className","key","type","checked","onChange","React","Component","Square","highlight","setTimeout","tag","owner","onClick","receiveClick","id","Input","inputRef","createRef","text","focus","disabled","handleFocus","handleInput","select","preventDefault","current","render","pencil","onSubmit","ref","defaultValue","onBlur","onFocus","ScoreboardCell","classNames","prevProps","label","edit","Scoreboard","stats","player","draw","computer","LEVEL","DELAY","delay","game","level","locked","playerBeginsAfterDraw","squareRefs","Array","newGame","ttt","sleep","makeMove","winner","milliseconds","Promise","resolve","playerMove","processResults","resetStats","board","userInput","handleLevelSelection","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1b5f7d5.chunk.js","sourcesContent":["// constants\n\n// square values\nconst EMPTY = 0;\nconst PLAYER = 1;\nconst COMPUTER = -1;\n\nconst MAX_HANDICAP = 100;\n\nclass Game {\n  constructor(handicap, playerBegins = true) {\n    this.handicap = 0 <= handicap && handicap < MAX_HANDICAP ? handicap : 10;\n\n    this.turn = playerBegins ? PLAYER : COMPUTER;\n\n    this.state = [\n      [EMPTY, EMPTY, EMPTY],\n      [EMPTY, EMPTY, EMPTY],\n      [EMPTY, EMPTY, EMPTY],\n    ];\n  }\n\n  playerMove(i, j) {\n    if (this.turn !== PLAYER) {\n      throw Error(\"it's not your turn!\");\n    }\n\n    if (this.state[i][j] !== EMPTY) {\n      throw Error(\"square not empty!\");\n    }\n\n    this.state[i][j] = PLAYER;\n    console.log(\"player move done\");\n    this.turn = COMPUTER;\n    return this.gameFinished;\n  }\n\n  makeMove() {\n    if (this.turn !== COMPUTER) {\n      throw Error(\"it's not my turn!\");\n    }\n    \n    console.log(\"computer moves\");\n    \n    if (this._randInt(MAX_HANDICAP) < this.handicap) {\n      console.log(\"you are lucky, I will just play a random square ;)\");\n      this._randomMove();\n    } else {\n      let action = [\n        () => this._win(),\n        () => this._avoidDefeat(),\n        () => this._matchball(),\n        () => this._center(),\n        () => this._oppositeCorner(),\n        () => this._emptyCorner(),\n        () => this._randomMove(),\n      ];\n      \n      while (action.length) {\n        if (action.shift()()) {\n          break;\n        }\n      }\n    }\n    \n    this.turn = PLAYER;\n    return this.gameFinished;\n  }\n\n  get winner() {\n    return this._winner;\n  }\n\n  get winningLine() {\n    return this._winningLine;\n  }\n\n  get gameFinished() {\n    const check = [\n      this._checkTriplet(3 * COMPUTER),\n      this._checkTriplet(3 * PLAYER),\n      this._where(this.state.flat(), EMPTY).length === 0,\n    ];\n\n    const winningLine = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [6, 4, 2],\n    ];\n\n    if (check[0].length) {\n      console.log(\"computer wins\");\n      this._winner = COMPUTER;\n      this._winningLine = winningLine[check[0][0]];\n      return true;\n    } else if (check[1].length) {\n      console.log(\"player wins\");\n      this._winner = PLAYER;\n      this._winningLine = winningLine[check[1][0]];\n      return true;\n    } else if (check[2] && !(check[0].length || check[1].length)) {\n      console.log(\"that's a draw\");\n      this._winner = EMPTY;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // strategies\n  _win() {\n    return this._fillTriplet(2 * COMPUTER, \"win\");\n  }\n\n  _avoidDefeat() {\n    return this._fillTriplet(2 * PLAYER, \"avoid defeat\");\n  }\n\n  _fillTriplet(check_value, message) {\n    const check = this._checkTriplet(check_value);\n\n    if (check.length) {\n      const c = check[this._randInt(check.length)];\n\n      if (0 <= c && c < 3) {\n        // row\n        const j = this._where(this.state[c], EMPTY)[0];\n        this.state[c][j] = COMPUTER;\n      } else if (3 <= c && c < 6) {\n        // col\n        const j = c - 3;\n        console.log([0, 1, 2].map((i) => this.state[i][j]));\n        const i = this._where(\n          [0, 1, 2].map((i) => this.state[i][j]),\n          EMPTY\n        )[0];\n        this.state[i][j] = COMPUTER;\n      } else if (c === 6) {\n        const s = this.state.flat();\n        const x = this._where(\n          [0, 4, 8].map((i) => s[i]),\n          EMPTY\n        )[0];\n        this.state[x][x] = COMPUTER;\n      } else {\n        // secondary diagonal\n        const s = this.state.flat();\n        const x = this._where(\n          [6, 4, 2].map((i) => s[i]),\n          EMPTY\n        )[0];\n        this.state[2 - x][x] = COMPUTER;\n      }\n\n      console.log(message);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  _matchball() {\n    const acc = (x, y) => x + y;\n\n    let rows = this._where(\n      this.state.map((v) => v.reduce(acc)),\n      COMPUTER\n    );\n    this._shuffle(rows);\n    \n    for (let r = 0; r < rows.length; r++) {\n      const i = rows[r];\n      const empty = this._where(this.state[i], EMPTY);\n      if (empty.length) {\n        console.log(\"create matchball: find empty square in row\");\n        const j = empty[this._randInt(empty.length)];\n        this.state[i][j] = COMPUTER;\n        return true;\n      }\n    }\n\n    let cols = this._where(\n      [0, 1, 2].map((j) => [0, 1, 2].map((i) => this.state[i][j]).reduce(acc)),\n      COMPUTER\n    );\n    this._shuffle(cols);\n\n    for (let c = 0; c < cols.length; c++) {\n      let j = cols[c];\n      const empty = this._where(\n        [0, 1, 2].map((i) => this.state[i][j]),\n        EMPTY\n      );\n      if (empty.length) {\n        console.log(\"create matchball: find empty square in column\");\n        const i = empty[this._randInt(empty.length)];\n        this.state[i][j] = COMPUTER;\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  _center() {\n    if (this.state[1][1] === EMPTY) {\n      console.log(\"play center\");\n      this.state[1][1] = COMPUTER;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  _oppositeCorner() {\n    const s = this.state.flat();\n\n    if (s[0] + s[8] === PLAYER) {\n      console.log(\"play opposite corner\");\n      if (this.state[0][0] === EMPTY) {\n        this.state[0][0] = COMPUTER;\n      } else {\n        this.state[2][2] = COMPUTER;\n      }\n      return true;\n    } else if (s[2] + s[6] === PLAYER) {\n      console.log(\"play opposite corner\");\n      if (this.state[0][2] === EMPTY) {\n        this.state[0][2] = COMPUTER;\n      } else {\n        this.state[2][0] = COMPUTER;\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  _emptyCorner() {\n    const c = [\n      [0, 0],\n      [0, 2],\n      [2, 0],\n      [2, 2],\n    ];\n    const e = this._where(\n      [0, 2, 6, 8].map((v) => this.state.flat()[v]),\n      EMPTY\n    );\n\n    if (e.length) {\n      console.log(\"play empty corner\");\n\n      let i = this._randInt(e.length);\n      this.state[c[e[i]][0]][c[e[i]][1]] = COMPUTER;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  _randomMove() {\n    const e = this._where(this.state.flat(), EMPTY);\n    if (e.length) {\n      console.log(\"play random square\");\n\n      let x = e[this._randInt(e.length)];\n      this.state[Math.floor(x / 3)][x % 3] = COMPUTER;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // helpers\n  _randInt(max) {\n    return Math.floor(0.99999 * Math.random() * max);\n  }\n\n  _where(array, value) {\n    let e = [];\n    array.forEach((v, i) => {\n      if (v === value) {\n        e.push(i);\n      }\n    });\n    return e;\n  }\n\n  _shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n\n  _checkTriplet(value) {\n    const acc = (x, y) => x + y;\n\n    const rows = this.state.map((v) => v.reduce(acc));\n    const cols = [0, 1, 2].map((j) =>\n      [0, 1, 2].map((i) => this.state[i][j]).reduce(acc)\n    );\n\n    const s = this.state.flat();\n    const diag = [0, 4, 8].map((x) => s[x]).reduce(acc);\n    const sdiag = [6, 4, 2].map((x) => s[x]).reduce(acc);\n\n    return this._where(rows.concat(cols).concat([diag]).concat([sdiag]), value);\n  }\n}\n\nexport { EMPTY, PLAYER, COMPUTER, Game };\n","import React from \"react\";\n\nimport \"./LevelSelection.css\";\n\nclass LevelSelection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: props.currentLevel,\n    };\n    this.updateSelectionState = this.updateSelectionState.bind(this);\n  }\n\n  updateSelectionState(e) {\n    const newLevel = parseInt(e.target.value);\n    this.setState({ selected: newLevel });\n    this.props.callback(newLevel);\n  }\n\n  render() {\n    let buttons = this.props.levels.map((v, i) => (\n      <div className=\"radioBtn\" key={i}>\n        <label className=\"radioBtn-label\">{v}</label>\n        <input\n          type=\"radio\"\n          value={i}\n          checked={this.state.selected === i}\n          onChange={this.updateSelectionState}\n        />\n      </div>\n    ));\n    return <div className=\"level-selection-grid\">{buttons}</div>;\n  }\n}\n\nexport default LevelSelection;\n","import React from \"react\";\n\nimport \"./Square.css\";\n\nimport * as ttt from \"../lib/tictactoe/tictactoe.js\";\n\nclass Square extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n\n    this.state = { highlight: false };\n  }\n\n  highlight() {\n    this.setState({ highlight: true });\n    setTimeout(() => this.setState({ highlight: false }), 800);\n  }\n\n  render() {\n    let tag = \"\";\n    if (this.props.owner === ttt.PLAYER) {\n      tag = <span>&#x0fbe;</span>;\n    } else if (this.props.owner === ttt.COMPUTER) {\n      tag = <span>&#x262f;</span>;\n    }\n\n    return (\n      <div\n        className={\n          \"square \" +\n          (this.state.highlight ? \"highlight-winning-line \" : \" \") +\n          (this.props.owner !== ttt.EMPTY && !this.state.highlight ? \"played\" : \"\")\n        }\n        onClick={() => this.props.receiveClick(this.props.id)}\n      >\n        <div className=\"tag\">{tag}</div>\n      </div>\n    );\n  }\n}\n\nexport default Square;\n","import React from \"react\";\n\nimport \"./Input.css\";\n\nclass Input extends React.Component {\n  constructor(props) {\n    super(props);\n    this.inputRef = React.createRef();\n    this.state = {\n      value: props.text,\n      focus: false,\n      disabled: false,\n    };\n    this.handleFocus = this.handleFocus.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  handleFocus(e) {\n    e.target.select();\n    this.setState({ focus: true });\n  }\n\n  handleInput(e) {\n    e.preventDefault();\n    this.setState({ disabled: true, value: this.inputRef.current.value });\n  }\n\n  render() {\n    let render;\n    if (this.state.disabled) {\n      render = <div className=\"cell\">{this.state.value}</div>;\n    } else {\n      const pencil = this.state.focus ? <span></span> : <label id=\"pencil\">&#x270E;</label>;\n      render = (\n        <form onSubmit={this.handleInput}>\n          <div className=\"input-form-div\">\n            {pencil}\n            <input\n              ref={this.inputRef}\n              type=\"text\"\n              defaultValue={this.state.value}\n              onBlur={this.handleInput}\n              onFocus={this.handleFocus}\n            />\n          </div>\n          <input type=\"submit\" />\n        </form>\n      );\n    }\n    return render;\n  }\n}\n\nexport default Input;\n","import React from \"react\";\n\nimport \"./ScoreboardCell.css\";\n\nimport Input from \"./Input.js\";\n\nclass ScoreboardCell extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      classNames: \"\",\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.value !== prevProps.value) {\n      this.setState({ classNames: \"scale-animation\" });\n      setTimeout(() => {\n        this.setState({ classNames: \"\" });\n      }, 400);\n    }\n  }\n\n  render() {\n    const label =\n      this.props.label === \"Player\" ? (\n        <Input text={\"Player\"} edit={true} />\n      ) : (\n        <div className=\"cell\">{this.props.label}</div>\n      );\n    return (\n      <div className={this.state.classNames}>\n        {label}\n        <div className=\"cell\">{this.props.value}</div>\n      </div>\n    );\n  }\n}\n\nexport default ScoreboardCell;\n","import React from \"react\";\n\nimport ScoreboardCell from \"./ScoreboardCell.js\";\n\nimport \"./Scoreboard.css\";\n\nclass Scoreboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stats: props.stats,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"scoreboard-grid\">\n        <ScoreboardCell label={\"Player\"} value={this.props.stats.player} />\n        <ScoreboardCell label={\"Draw\"} value={this.props.stats.draw} />\n        <ScoreboardCell label={\"Computer\"} value={this.props.stats.computer} />\n      </div>\n    );\n  }\n}\n\nexport default Scoreboard;\n","import React from \"react\";\n\nimport \"./Game.css\";\n\nimport * as ttt from \"../lib/tictactoe/tictactoe.js\";\n\nimport LevelSelection from \"./LevelSelection.js\";\nimport Square from \"./Square.js\";\nimport Scoreboard from \"./Scoreboard.js\";\n\nconst LEVEL = [\n  { label: \"trivial\", handicap: 90 },\n  { label: \"easy\", handicap: 65 },\n  { label: \"medium\", handicap: 48 },\n  { label: \"hard\", handicap: 24 },\n  { label: \"impossible\", handicap: 5 },\n];\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n\n    this.DELAY = props.delay < 0 || props.delay > 500 ? 300 : props.delay;\n    this.game = null;\n    this.level = 2; // default level: 'medium'\n    this.locked = false;\n    this.playerBegins = this.props.playerBegins;\n    this.playerBeginsAfterDraw = !this.playerBegins;\n\n    this.squareRefs = [...Array(9)].map(() => React.createRef());\n\n    this.state = {\n      state: [\n        [ttt.EMPTY, ttt.EMPTY, ttt.EMPTY],\n        [ttt.EMPTY, ttt.EMPTY, ttt.EMPTY],\n        [ttt.EMPTY, ttt.EMPTY, ttt.EMPTY],\n      ],\n      stats: {\n        computer: 0,\n        draw: 0,\n        player: 0,\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.newGame();\n  }\n\n  async newGame() {\n    this.game = new ttt.Game(LEVEL[this.level].handicap, this.playerBegins);\n    this.setState({ state: this.game.state }); // [...state]???!\n\n    if (!this.playerBegins) {\n      this.locked = true;\n      await this.sleep(200);\n      this.game.makeMove();\n      this.setState({ state: this.game.state }); // [...state]???!\n    }\n    this.locked = false;\n  }\n\n  resetStats() {\n    this.setState({\n      stats: {\n        computer: 0,\n        draw: 0,\n        player: 0,\n      },\n    });\n  }\n\n  async processResults() {\n    const winner = this.game.winner;\n\n    this.setState((state) => {\n      let s = { ...state.stats };\n      if (winner === ttt.COMPUTER) {\n        s.computer += 1;\n      } else if (winner === ttt.PLAYER) {\n        s.player += 1;\n      } else {\n        s.draw += 1;\n      }\n      return { stats: s };\n    });\n\n    if (winner === ttt.COMPUTER) {\n      this.playerBegins = true;\n    } else if (winner === ttt.PLAYER) {\n      this.playerBegins = false;\n    } else {\n      this.playerBegins = this.playerBeginsAfterDraw;\n      this.playerBeginsAfterDraw = !this.playerBeginsAfterDraw;\n    }\n\n    if (winner !== ttt.EMPTY) {\n      const line = this.game._winningLine;\n      line.map((v) => this.squareRefs[v].current.highlight());\n    }\n\n    await this.sleep(800);\n    this.newGame();\n  }\n\n  sleep(milliseconds) {\n    return new Promise((resolve) => setTimeout(resolve, milliseconds));\n  }\n\n  async userInput(id) {\n    const i = Math.floor(id / 3);\n    const j = id % 3;\n\n    if (!this.locked) {\n      this.locked = true;\n      try {\n        // human moves\n        let gameFinished = this.game.playerMove(i, j);\n        this.setState({ state: this.game.state });\n\n        if (gameFinished) {\n          this.processResults();\n        } else {\n          // optional computer move if game not finished\n          await this.sleep(\n            Math.floor((0.6 + 0.4 * Math.random()) * this.DELAY)\n          );\n          gameFinished = this.game.makeMove();\n          this.setState({ state: this.game.state });\n\n          if (gameFinished) {\n            this.processResults();\n          } else {\n            this.locked = false;\n          }\n        }\n      } catch (e) {\n        console.log(e);\n        this.locked = false;\n      }\n    }\n  }\n\n  async handleLevelSelection(newLevel) {\n    this.level = newLevel;\n    this.playerBegins = true;\n    this.resetStats();\n    this.newGame();\n  }\n\n  render() {\n    let board = [...new Array(9)].map((v, i) => (\n      <Square\n        ref={this.squareRefs[i]}\n        id={i} // make key available as prop in Square\n        key={i}\n        owner={this.state.state[Math.floor(i / 3)][i % 3]}\n        receiveClick={this.userInput.bind(this)}\n      />\n    ));\n    return (\n      <div>\n        <div className=\"board\">{board}</div>\n        <Scoreboard stats={this.state.stats} />\n        <LevelSelection\n          callback={this.handleLevelSelection.bind(this)}\n          currentLevel={this.level}\n          levels={LEVEL.map((v) => v.label)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Game from \"./components/Game.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Let's Play: Tic Tac Toe</h1>\n      <h2>(implemented using React)</h2>\n      <div className=\"game\">\n        <Game playerBegins={true} delay={300} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}